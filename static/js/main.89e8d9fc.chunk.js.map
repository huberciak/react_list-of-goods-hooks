{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","goods","useState","isVisible","setStart","isReversed","setReverse","sortBy","setSortBy","goodsList","sort","first","second","localeCompare","length","reverse","className","type","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6GaC,EA1GO,WACpB,IAAMC,EAAK,UAAOF,GAClB,EAA8BG,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAuBMC,EAAsBR,EAE5B,OAAQM,GACN,IAAK,OACHE,EAAUC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MACtD,MACF,IAAK,SACHH,EAAUC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMG,OACtCF,EAAOE,UAUb,OAJIT,GACFI,EAAUM,UAIV,sBAAKC,UAAU,YAAf,WACIb,GACA,wBACEc,KAAK,SACLD,UAAU,SACVE,QA7CM,WACZd,GAAS,SAAAe,GAAI,OAAKA,MAyCd,mBASDhB,GACC,gCACE,oBAAIa,UAAU,kBAAd,SACGP,EAAUW,KAAI,SAACC,GAAD,OACb,6BACGA,GADMA,QAKb,sBAAKL,UAAU,kBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,SACVE,QA5DI,WACdZ,GAAW,SAAAa,GAAI,OAAKA,MAwDZ,qBAQA,wBACEF,KAAK,SACLD,UAAU,SACVE,QAhEe,WACzBV,EAAU,SA4DF,0BAQA,wBACES,KAAK,SACLD,UAAU,SACVE,QApES,WACnBV,EAAU,WAgEF,4BAQA,wBACES,KAAK,SACLD,UAAU,SACVE,QAxEE,WACZZ,GAAW,GACXE,EAAU,KAmEF,6BCxGZc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.89e8d9fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const goods = [...goodsFromServer];\n  const [isVisible, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n\n  const start = () => {\n    setStart(prev => !prev);\n  };\n\n  const reverse = () => {\n    setReverse(prev => !prev);\n  };\n\n  const sortAlphabetically = () => {\n    setSortBy('name');\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setSortBy('');\n  };\n\n  const goodsList: string[] = goods;\n\n  switch (sortBy) {\n    case 'name':\n      goodsList.sort((first, second) => first.localeCompare(second));\n      break;\n    case 'length':\n      goodsList.sort((first, second) => first.length\n      - second.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    goodsList.reverse();\n  }\n\n  return (\n    <div className=\"container\">\n      {!isVisible && (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={start}\n        >\n          Start\n        </button>\n      )}\n\n      {isVisible && (\n        <div>\n          <ul className=\"container__list\">\n            {goodsList.map((good) => (\n              <li key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n          <div className=\"buttonContainer\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={sortAlphabetically}\n            >\n              Sort by name\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}